#!/bin/bash

if [ -z "$1" ]; then
  echo 'usage: REL_PATH_FROM_CWD'
  exit 1
fi

path=$1
curdir=$(realpath .)
base=$(basename $curdir)

files-with-depth "$path" \
| awk -v rootname="$base" \
      '
BEGIN {
  FS="^[0-9]+ ";
  stack_sz = 0
  split("", stack)
}

match($0, /^([0-9]+)/, cap) {
  gsub(/ +$/, "", $2);
  if (match($2, /^(.*)\/$/, cap2)) {
    is_dir = 1;
    path_el = cap2[1]
  } else {
    is_dir = 0;
    path_el = $2;
  }
  name = $2
  new_sz = cap[1]+1;

  if (new_sz > stack_sz) {
    stack_sz = stack_sz + 1;
  } else if(new_sz < stack_sz) {
    stack_sz = new_sz;
  }
  stack[stack_sz-1] = path_el;

  printf "*";
  path = stack[0];
  for( i=1; i<stack_sz; i++ ) {
    printf "*";
    path = path "/" stack[i];
  };

  if (is_dir)
    printf " [%0]";
  else
    printf " TODO";

  printf " [[%s:%s][%s]]\n", rootname, path, name;
}
'

#ctags crap
#  subawk=sprintf("BEGIN { FS = \"\\t\" } ; { for ( i=0; i<%d; i++ ) printf \"*\"; printf \" \"; itemname=$1; print $5 \"::\" $6 \"::\" $1; print }", stack_sz+1);
#  #argh, didnt mean to trap myself into recursively calling awk :(
#  awk_nightmare=sprintf("ctags --fields=+K --file-scope=no --c++-kinds=f -f - %s | awk \x27%s\x27", path, subawk);
#  system(awk_nightmare);
